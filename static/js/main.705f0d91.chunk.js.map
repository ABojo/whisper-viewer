{"version":3,"sources":["utils/API.js","components/PostDetail.js","utils/formatDate.js","utils/formatAge.js","components/PostDropdown.js","components/Loader.js","components/Post.js","components/PostsGrid.js","components/Navbar.js","components/App.js","index.js"],"names":["API","getLatest","a","fetch","response","json","getOwner","wid","PostDetail","props","name","value","className","formatDate","timeStamp","date","Date","rawHours","getHours","month","getMonth","day","getDate","hour","formatHour","minutes","toString","length","formatMinutes","getMinutes","timeOfDay","formatAge","age","PostDropdown","owner","post","toggleDropdown","gender","location","rating","average","toFixed","total","replies","viewCount","ts","onClick","Loader","classes","Post","useState","setOwner","dropdownShown","setDropdownShown","isLoading","setIsLoading","fetchOwner","data","showDropdown","nickname","class","src","url","alt","text","PostsGrid","posts","map","Navbar","getPosts","disabled","App","setPosts","updateTime","setUpdateTime","latestPosts","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.705f0d91.chunk.js","sourcesContent":["const API = (() => {\r\n  const getLatest = async () => {\r\n    const response = await fetch(\r\n      'https://whisper-latest.herokuapp.com/api/posts'\r\n    );\r\n    const json = await response.json();\r\n\r\n    return json;\r\n  };\r\n\r\n  const getOwner = async (wid) => {\r\n    const response = await fetch(\r\n      `https://whisper-latest.herokuapp.com/api/posts/${wid}`\r\n    );\r\n    const json = await response.json();\r\n\r\n    return json;\r\n  };\r\n\r\n  return { getLatest, getOwner };\r\n})();\r\n\r\nexport default API;\r\n","function PostDetail(props) {\r\n  const { name, value } = props;\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <h2 className=\"text-purple-200 text-sm uppercase tracking-widest font-bold\">\r\n        {name}\r\n      </h2>\r\n      <p className=\"text-white text-sm\">{value}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n","const formatHour = (hour) => {\r\n  if (hour === 0) return 12;\r\n  if (hour > 12) return hour - 12;\r\n\r\n  return hour;\r\n};\r\n\r\nconst formatMinutes = (minutes) => {\r\n  if (minutes.toString().length === 1) return `0${minutes}`;\r\n\r\n  return minutes;\r\n};\r\n\r\nconst formatTimeOfDay = (hours) => {\r\n  if (hours >= 12) return 'PM';\r\n\r\n  return 'AM';\r\n};\r\n\r\nconst formatDate = (timeStamp) => {\r\n  const date = new Date(timeStamp);\r\n\r\n  const rawHours = date.getHours();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hour = formatHour(rawHours);\r\n  const minutes = formatMinutes(date.getMinutes());\r\n  const timeOfDay = formatTimeOfDay(rawHours);\r\n  return `${month}/${day} ${hour}:${minutes} ${timeOfDay}`;\r\n};\r\n\r\nexport default formatDate;\r\n","const formatAge = (age) => {\r\n  if (age === 15) return '15-17';\r\n  if (age === 18) return '18-20';\r\n  if (age === 21) return '21-25';\r\n  if (age === 26) return '26-29';\r\n  if (age === 30) return '30-35';\r\n  if (age === 36) return '36-44';\r\n  if (age === 45) return '45+';\r\n\r\n  return age;\r\n};\r\n\r\nexport default formatAge;\r\n","import PostDetail from './PostDetail';\r\nimport formatDate from '../utils/formatDate';\r\nimport formatAge from '../utils/formatAge';\r\n\r\nfunction PostDropdown(props) {\r\n  const { owner, post, toggleDropdown } = props;\r\n\r\n  return (\r\n    <div className=\"bg-purple-500 p-5 pt-0 absolute top-0 left-0 w-full max-w-100 flex justify-between items-end\">\r\n      <div>\r\n        <PostDetail name=\"Age\" value={formatAge(owner.age)} />\r\n        <PostDetail name=\"Gender\" value={owner.gender} />\r\n        <PostDetail name=\"Location\" value={post.location} />\r\n        <PostDetail\r\n          name=\"Rating\"\r\n          value={`${owner.rating.average.toFixed(2)} - ${\r\n            owner.rating.total\r\n          } Chats`}\r\n        />\r\n        <PostDetail name=\"Replies\" value={post.replies} />\r\n        <PostDetail name=\"Views\" value={post.viewCount} />\r\n        <PostDetail name=\"Timestamp\" value={formatDate(new Date(post.ts))} />\r\n      </div>\r\n      <button onClick={toggleDropdown}>\r\n        <i className=\"text-white text-lg fas fa-arrow-up\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostDropdown;\r\n","function Loader(props) {\r\n  const { classes } = props;\r\n  return <div className={`loader ${classes && classes}`}></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import { useState } from 'react';\r\nimport API from '../utils/API';\r\nimport PostDropdown from './PostDropdown';\r\nimport Loader from './Loader';\r\n\r\nfunction Post(props) {\r\n  const { post } = props;\r\n\r\n  const [owner, setOwner] = useState(null);\r\n  const [dropdownShown, setDropdownShown] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //pulls owners details from server\r\n  const fetchOwner = async () => {\r\n    setIsLoading(true);\r\n    const response = await API.getOwner(post.wid);\r\n    setIsLoading(false);\r\n    setOwner(response.data.owner);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownShown(!dropdownShown);\r\n  };\r\n\r\n  const showDropdown = async () => {\r\n    if (!owner) await fetchOwner();\r\n\r\n    toggleDropdown();\r\n  };\r\n\r\n  return (\r\n    <div className=\"shadow relative\">\r\n      <div className=\"bg-purple-500 p-5 rounded-t flex justify-between items-end\">\r\n        <div>\r\n          <p className=\"text-white font-bold mb-2\">\r\n            <i className=\"fas fa-user mr-2\"></i>\r\n            {post.nickname}\r\n          </p>\r\n        </div>\r\n        {!dropdownShown && (\r\n          <button onClick={showDropdown}>\r\n            <i class=\"text-white text-lg fas fa-arrow-down\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"relative\">\r\n        <img src={post.url} alt={post.text} className=\"rounded-b mx-auto\" />\r\n        {dropdownShown && (\r\n          <PostDropdown\r\n            post={post}\r\n            owner={owner}\r\n            toggleDropdown={toggleDropdown}\r\n          />\r\n        )}\r\n      </div>\r\n      {isLoading && (\r\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n          <Loader classes=\"text-white\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import Post from './Post';\r\n\r\nfunction PostsGrid(props) {\r\n  const { posts } = props;\r\n\r\n  return (\r\n    <div className=\"post-grid\">\r\n      {posts &&\r\n        posts.map((post) => {\r\n          return <Post post={post} key={post.wid} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostsGrid;\r\n","function Navbar(props) {\r\n  const { getPosts, isLoading } = props;\r\n\r\n  const disabledButton = 'bg-gray-200 cursor-default';\r\n  const activeButton = 'bg-purple-500 hover:bg-purple-700';\r\n  return (\r\n    <div className=\"flex justify-between items-baseline py-12\">\r\n      <h1 className=\"text-purple-500 text-2xl\">Whisper's Latest</h1>\r\n      <button\r\n        disabled={isLoading}\r\n        onClick={getPosts}\r\n        className={` rounded p-2 transition duration-200 ${\r\n          isLoading ? disabledButton : activeButton\r\n        }`}\r\n      >\r\n        <i className=\"fas fa-sync-alt text-white text-xl\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import '../css/styles.css';\nimport { useState, useEffect, Fragment } from 'react';\nimport PostsGrid from './PostsGrid';\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport formatDate from '../utils/formatDate';\nimport API from '../utils/API';\n\nfunction App() {\n  const [posts, setPosts] = useState('');\n  const [updateTime, setUpdateTime] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPosts = async () => {\n    setIsLoading(true);\n    const json = await API.getLatest();\n    setPosts(json.data.latestPosts);\n    setUpdateTime(`Last updated at ${formatDate(new Date())}`);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div className=\"bg-white min-h-screen\">\n      <div className=\"w-11/12 max-w-screen-lg mx-auto\">\n        <Navbar getPosts={getPosts} isLoading={isLoading} />\n        {isLoading ? (\n          <Loader classes=\"text-purple-500\" />\n        ) : (\n          <Fragment>\n            <p className=\"text-lg mb-6 text-gray-400 text-center\">\n              {updateTime && updateTime}\n            </p>\n            <PostsGrid posts={posts} />\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}