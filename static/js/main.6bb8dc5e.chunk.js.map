{"version":3,"sources":["components/Post.js","components/PostsGrid.js","components/Navbar.js","components/Loader.js","utils/formatDate.js","utils/API.js","components/App.js","index.js"],"names":["Post","props","post","className","class","nickname","location","src","url","alt","text","PostsGrid","posts","map","Navbar","getPosts","onClick","Loader","formatDate","date","rawHours","getHours","month","getMonth","day","getDate","hour","formatHour","minutes","toString","length","formatMinutes","getMinutes","timeOfDay","API","getLatest","a","fetch","response","json","App","useState","setPosts","updateTime","setUpdateTime","isLoading","setIsLoading","data","latestPosts","Date","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAiBeA,MAjBf,SAAcC,GACZ,IAAQC,EAASD,EAATC,KAER,OACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,oBAAGA,UAAU,4BAAb,UACE,mBAAGC,MAAM,qBACRF,EAAKG,YAER,mBAAGF,UAAU,qBAAb,SAAmCD,EAAKI,cAE1C,qBAAKC,IAAKL,EAAKM,IAAKC,IAAKP,EAAKQ,KAAMP,UAAU,0BCGrCQ,MAbf,SAAmBV,GACjB,IAAQW,EAAUX,EAAVW,MAER,OACE,qBAAKT,UAAU,YAAf,SACGS,GACCA,EAAMC,KAAI,SAACX,GACT,OAAO,cAAC,EAAD,CAAMA,KAAMA,UCOdY,MAhBf,SAAgBb,GACd,IAAQc,EAAad,EAAbc,SAER,OACE,sBAAKZ,UAAU,4CAAf,UACE,oBAAIA,UAAU,2BAAd,8BACA,wBACEa,QAASD,EACTZ,UAAU,wEAFZ,SAIE,mBAAGC,MAAM,6CCNFa,MAJf,WACE,OAAO,qBAAKd,UAAU,4BC6BTe,EAXI,SAACC,GAClB,IAAMC,EAAWD,EAAKE,WAEhBC,EAAQH,EAAKI,WAAa,EAC1BC,EAAML,EAAKM,UACXC,EAxBW,SAACA,GAClB,OAAa,IAATA,EAAmB,GACnBA,EAAO,GAAWA,EAAO,GAEtBA,EAoBMC,CAAWP,GAClBQ,EAlBc,SAACA,GACrB,OAAkC,IAA9BA,EAAQC,WAAWC,OAAoB,IAAN,OAAWF,GAEzCA,EAeSG,CAAcZ,EAAKa,cAC7BC,EAA4Bb,EAZtB,GAAW,KAEhB,KAWP,MAAM,GAAN,OAAUE,EAAV,YAAmBE,EAAnB,YAA0BE,EAA1B,YAAkCE,EAAlC,YAA6CK,ICfhCC,EAJP,CAACC,UAPO,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,kDADZ,cACXC,EADW,gBAEEA,EAASC,OAFX,cAEXA,EAFW,yBAIVA,GAJU,2CAAH,sDC2CDC,MApCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAO7B,EAAP,KAAc8B,EAAd,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEM/B,EAAQ,uCAAG,4BAAAqB,EAAA,6DACfU,GAAa,GADE,SAEIZ,EAAIC,YAFR,OAETI,EAFS,OAGfG,EAASH,EAAKQ,KAAKC,aACnBJ,EAAc,mBAAD,OAAoB1B,EAAW,IAAI+B,QAChDH,GAAa,GALE,2CAAH,qDAYd,OAJAI,qBAAU,WACRnC,MACC,IAGD,qBAAKZ,UAAU,wBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,cAAC,EAAD,CAAQY,SAAUA,IACjB8B,EACC,cAAC,EAAD,IAEA,eAAC,WAAD,WACE,mBAAG1C,UAAU,yCAAb,SACGwC,GAAcA,IAEjB,cAAC,EAAD,CAAW/B,MAAOA,aChC9BuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6bb8dc5e.chunk.js","sourcesContent":["function Post(props) {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <div className=\"shadow\">\r\n      <div className=\"bg-purple-500 p-5 rounded-t\">\r\n        <p className=\"text-white font-bold mb-2\">\r\n          <i class=\"fas fa-user mr-2\"></i>\r\n          {post.nickname}\r\n        </p>\r\n        <p className=\"text-white text-sm\">{post.location}</p>\r\n      </div>\r\n      <img src={post.url} alt={post.text} className=\"rounded-b mx-auto\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import Post from './Post';\r\n\r\nfunction PostsGrid(props) {\r\n  const { posts } = props;\r\n\r\n  return (\r\n    <div className=\"post-grid\">\r\n      {posts &&\r\n        posts.map((post) => {\r\n          return <Post post={post} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostsGrid;\r\n","function Navbar(props) {\r\n  const { getPosts } = props;\r\n\r\n  return (\r\n    <div className=\"flex justify-between items-baseline py-12\">\r\n      <h1 className=\"text-purple-500 text-2xl\">Whisper's Latest</h1>\r\n      <button\r\n        onClick={getPosts}\r\n        className=\"bg-purple-500 rounded p-2 hover:bg-purple-700 transition duration-200\"\r\n      >\r\n        <i class=\"fas fa-sync-alt text-white text-xl\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","function Loader() {\r\n  return <div className=\"loader text-purple-500\"></div>;\r\n}\r\n\r\nexport default Loader;\r\n","const formatHour = (hour) => {\r\n  if (hour === 0) return 12;\r\n  if (hour > 12) return hour - 12;\r\n\r\n  return hour;\r\n};\r\n\r\nconst formatMinutes = (minutes) => {\r\n  if (minutes.toString().length === 1) return `0${minutes}`;\r\n\r\n  return minutes;\r\n};\r\n\r\nconst formatTimeOfDay = (hours) => {\r\n  if (hours > 12) return 'PM';\r\n\r\n  return 'AM';\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  const rawHours = date.getHours();\r\n\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hour = formatHour(rawHours);\r\n  const minutes = formatMinutes(date.getMinutes());\r\n  const timeOfDay = formatTimeOfDay(rawHours);\r\n  return `${month}/${day} ${hour}:${minutes} ${timeOfDay}`;\r\n};\r\n\r\nexport default formatDate;\r\n","const API = (() => {\r\n\tconst getLatest = async () => {\r\n\t\tconst response = await fetch('https://whisper-latest.herokuapp.com/api/posts');\r\n\t\tconst json = await response.json();\r\n\r\n\t\treturn json;\r\n\t};\r\n\r\n\treturn {getLatest};\r\n})();\r\n\r\n\r\nexport default API;","import '../css/styles.css';\nimport { useState, useEffect, Fragment } from 'react';\nimport PostsGrid from './PostsGrid';\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport formatDate from '../utils/formatDate';\nimport API from '../utils/API';\n\nfunction App() {\n  const [posts, setPosts] = useState('');\n  const [updateTime, setUpdateTime] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPosts = async () => {\n    setIsLoading(true);\n    const json = await API.getLatest();\n    setPosts(json.data.latestPosts);\n    setUpdateTime(`Last updated at ${formatDate(new Date())}`);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div className=\"bg-white min-h-screen\">\n      <div className=\"w-11/12 max-w-screen-lg mx-auto\">\n        <Navbar getPosts={getPosts} />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Fragment>\n            <p className=\"text-lg mb-6 text-gray-400 text-center\">\n              {updateTime && updateTime}\n            </p>\n            <PostsGrid posts={posts} />\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}