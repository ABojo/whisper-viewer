{"version":3,"sources":["utils/API.js","components/PostDetail.js","utils/formatDate.js","utils/formatAge.js","utils/captilazeFirstLetter.js","components/PostDropdown.js","components/Loader.js","components/Post.js","components/PostsGrid.js","components/Navbar.js","components/GetMorePosts.js","components/App.js","index.js"],"names":["API","getLatest","scrollId","a","fetch","response","json","getOwner","wid","PostDetail","props","name","value","className","formatDate","timeStamp","date","Date","rawHours","getHours","month","getMonth","day","getDate","hour","formatHour","minutes","toString","length","formatMinutes","getMinutes","timeOfDay","formatAge","age","capitalizeFirstLetter","str","substring","toUpperCase","slice","PostDropdown","owner","post","toggleDropdown","gender","location","rating","average","toFixed","total","replies","viewCount","ts","onClick","Loader","classes","Post","useState","setOwner","dropdownShown","setDropdownShown","isLoading","setIsLoading","fetchOwner","data","showDropdown","nickname","src","url","alt","text","PostsGrid","posts","map","Navbar","getPosts","disabled","GetMorePosts","onClickGet","getNextPosts","App","setScrollId","setPosts","updateTime","setUpdateTime","getLatestPosts","latestPosts","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdb21636.chunk.js","sourcesContent":["const API = (() => {\r\n  const getLatest = async (scrollId) => {\r\n    const response = await fetch(\r\n      `https://whisper-latest.herokuapp.com/api/posts${\r\n        scrollId ? `?scroll_id=${scrollId}` : ''\r\n      }`\r\n    );\r\n    const json = await response.json();\r\n\r\n    return json;\r\n  };\r\n\r\n  const getOwner = async (wid) => {\r\n    const response = await fetch(\r\n      `https://whisper-latest.herokuapp.com/api/posts/${wid}`\r\n    );\r\n    const json = await response.json();\r\n\r\n    return json;\r\n  };\r\n\r\n  return { getLatest, getOwner };\r\n})();\r\n\r\nexport default API;\r\n","function PostDetail(props) {\r\n  const { name, value } = props;\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <h2 className=\"text-purple-200 text-sm uppercase tracking-widest font-bold\">\r\n        {name}\r\n      </h2>\r\n      <p className=\"text-white text-sm\">{value}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n","const formatHour = (hour) => {\r\n  if (hour === 0) return 12;\r\n  if (hour > 12) return hour - 12;\r\n\r\n  return hour;\r\n};\r\n\r\nconst formatMinutes = (minutes) => {\r\n  if (minutes.toString().length === 1) return `0${minutes}`;\r\n\r\n  return minutes;\r\n};\r\n\r\nconst formatTimeOfDay = (hours) => {\r\n  if (hours >= 12) return 'PM';\r\n\r\n  return 'AM';\r\n};\r\n\r\nconst formatDate = (timeStamp) => {\r\n  const date = new Date(timeStamp);\r\n\r\n  const rawHours = date.getHours();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hour = formatHour(rawHours);\r\n  const minutes = formatMinutes(date.getMinutes());\r\n  const timeOfDay = formatTimeOfDay(rawHours);\r\n  return `${month}/${day} ${hour}:${minutes} ${timeOfDay}`;\r\n};\r\n\r\nexport default formatDate;\r\n","const formatAge = (age) => {\r\n  if (age === 15) return '15-17';\r\n  if (age === 18) return '18-20';\r\n  if (age === 21) return '21-25';\r\n  if (age === 26) return '26-29';\r\n  if (age === 30) return '30-35';\r\n  if (age === 36) return '36-44';\r\n  if (age === 45) return '45+';\r\n\r\n  return age;\r\n};\r\n\r\nexport default formatAge;\r\n","const capitalizeFirstLetter = (str) => {\r\n  return `${str.substring(0, 1).toUpperCase()}${str.slice(1)}`;\r\n};\r\n\r\nexport default capitalizeFirstLetter;\r\n","import PostDetail from './PostDetail';\r\nimport formatDate from '../utils/formatDate';\r\nimport formatAge from '../utils/formatAge';\r\nimport capitalizeFirstLetter from '../utils/captilazeFirstLetter';\r\n\r\nfunction PostDropdown(props) {\r\n  const { owner, post, toggleDropdown } = props;\r\n\r\n  return (\r\n    <div className=\"bg-purple-500 p-5 pt-0 absolute top-0 left-0 w-full max-w-100 flex justify-between items-end\">\r\n      <div>\r\n        <PostDetail name=\"Age\" value={formatAge(owner.age)} />\r\n        <PostDetail name=\"Gender\" value={capitalizeFirstLetter(owner.gender)} />\r\n        <PostDetail name=\"Location\" value={post.location} />\r\n        <PostDetail\r\n          name=\"Rating\"\r\n          value={`${owner.rating.average.toFixed(2)} - ${\r\n            owner.rating.total\r\n          } Chats`}\r\n        />\r\n        <PostDetail name=\"Replies\" value={post.replies} />\r\n        <PostDetail name=\"Views\" value={post.viewCount} />\r\n        <PostDetail name=\"Timestamp\" value={formatDate(new Date(post.ts))} />\r\n      </div>\r\n      <button onClick={toggleDropdown}>\r\n        <i className=\"text-white text-lg fas fa-arrow-up hover:text-gray-200 duration-200 transition\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostDropdown;\r\n","function Loader(props) {\r\n  const { classes } = props;\r\n  return <div className={`loader ${classes && classes}`}></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import { useState } from 'react';\r\nimport API from '../utils/API';\r\nimport PostDropdown from './PostDropdown';\r\nimport Loader from './Loader';\r\n\r\nfunction Post(props) {\r\n  const { post } = props;\r\n\r\n  const [owner, setOwner] = useState(null);\r\n  const [dropdownShown, setDropdownShown] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  //pulls owners details from server\r\n  const fetchOwner = async () => {\r\n    setIsLoading(true);\r\n    const response = await API.getOwner(post.wid);\r\n    setIsLoading(false);\r\n    setOwner(response.data.owner);\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setDropdownShown(!dropdownShown);\r\n  };\r\n\r\n  const showDropdown = async () => {\r\n    if (!owner) await fetchOwner();\r\n\r\n    toggleDropdown();\r\n  };\r\n\r\n  return (\r\n    <div className=\"shadow relative fadeIn\">\r\n      <div className=\"bg-purple-500 p-5 rounded-t flex justify-between items-end\">\r\n        <div>\r\n          <p className=\"text-white font-bold mb-2\">\r\n            <i className=\"fas fa-user mr-2\"></i>\r\n            {post.nickname}\r\n          </p>\r\n        </div>\r\n        {!dropdownShown && (\r\n          <button onClick={showDropdown}>\r\n            <i className=\"text-white text-lg fas fa-arrow-down hover:text-gray-200 duration-200 transition\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"relative\">\r\n        <img src={post.url} alt={post.text} className=\"rounded-b mx-auto\" />\r\n        {dropdownShown && (\r\n          <PostDropdown\r\n            post={post}\r\n            owner={owner}\r\n            toggleDropdown={toggleDropdown}\r\n          />\r\n        )}\r\n      </div>\r\n      {isLoading && (\r\n        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n          <Loader classes=\"text-white\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import Post from './Post';\r\n\r\nfunction PostsGrid(props) {\r\n  const { posts } = props;\r\n\r\n  return (\r\n    <div className=\"post-grid mb-12\">\r\n      {posts &&\r\n        posts.map((post) => {\r\n          return <Post post={post} key={post.wid} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostsGrid;\r\n","function Navbar(props) {\r\n  const { getPosts, isLoading } = props;\r\n\r\n  const disabledButton = 'bg-gray-200 cursor-default';\r\n  const activeButton = 'bg-purple-500 hover:bg-purple-700';\r\n  return (\r\n    <div className=\"flex justify-between items-baseline py-12\">\r\n      <h1 className=\"text-purple-500 text-2xl\">Whisper's Latest</h1>\r\n      <button\r\n        disabled={isLoading}\r\n        onClick={getPosts}\r\n        className={` rounded p-2 transition duration-200 ${\r\n          isLoading ? disabledButton : activeButton\r\n        }`}\r\n      >\r\n        <i className=\"fas fa-sync-alt text-white text-xl\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import Loader from './Loader';\r\nimport { useState } from 'react';\r\nfunction GetMorePosts(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const active = 'bg-purple-100 hover:bg-purple-200 text-purple-900';\r\n  const disabled = 'bg-gray-200 text-white';\r\n\r\n  const onClickGet = async () => {\r\n    setIsLoading(true);\r\n    await props.getNextPosts();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      disabled={isLoading}\r\n      onClick={onClickGet}\r\n      className={`${\r\n        isLoading ? disabled : active\r\n      } w-full rounded flex justify-center items-center transition duration-200 font-bold text-2xl p-5 mb-12`}\r\n    >\r\n      {isLoading ? 'Getting posts...' : 'Get More Posts'}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default GetMorePosts;\r\n","import '../css/styles.css';\nimport { useState, useEffect, Fragment } from 'react';\nimport PostsGrid from './PostsGrid';\nimport Navbar from './Navbar';\nimport Loader from './Loader';\nimport GetMorePosts from './GetMorePosts';\nimport formatDate from '../utils/formatDate';\nimport API from '../utils/API';\n\nfunction App() {\n  const [scrollId, setScrollId] = useState('');\n  const [posts, setPosts] = useState('');\n  const [updateTime, setUpdateTime] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getLatestPosts = async () => {\n    setIsLoading(true);\n    const json = await API.getLatest();\n    setPosts(json.data.latestPosts);\n    setScrollId(json.data.scrollId);\n    setUpdateTime(`Last updated at ${formatDate(new Date())}`);\n    setIsLoading(false);\n  };\n\n  const getNextPosts = async () => {\n    const json = await API.getLatest(scrollId);\n    setPosts([...posts, ...json.data.latestPosts]);\n    setScrollId(json.data.scrollId);\n  };\n\n  useEffect(() => {\n    getLatestPosts();\n  }, []);\n\n  return (\n    <div className=\"bg-white min-h-screen\">\n      <div className=\"w-11/12 max-w-screen-lg mx-auto\">\n        <Navbar getPosts={getLatestPosts} isLoading={isLoading} />\n        {isLoading ? (\n          <Loader classes=\"text-purple-500\" />\n        ) : (\n          <Fragment>\n            <p className=\"text-lg mb-6 text-gray-400 text-center\">\n              {updateTime && updateTime}\n            </p>\n            <PostsGrid posts={posts} />\n            <GetMorePosts getNextPosts={getNextPosts} />\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}